[{"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\index.js":"1","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\reportWebVitals.js":"2","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\InputModal\\index.js":"3","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\PdfLoader\\index.js":"4","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\PdfLoader\\hooks\\useLoadPdf.js":"5","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\PdfLoader\\hooks\\useHandleModal.js":"6"},{"size":518,"mtime":1612353940370,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":608,"mtime":1612354109616,"results":"10","hashOfConfig":"8"},{"size":1996,"mtime":1612354093399,"results":"11","hashOfConfig":"8"},{"size":2771,"mtime":1612354448275,"results":"12","hashOfConfig":"8"},{"size":279,"mtime":1612354412204,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vz83ai",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\index.js",[],["31","32"],"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\reportWebVitals.js",[],"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\InputModal\\index.js",["33","34"],"import React, { useRef } from \"react\";\r\nimport { MdPictureAsPdf } from \"react-icons/md\";\r\nimport { wrapper, close, input, label } from \"./style.module.css\";\r\n\r\nexport default function InputModal({ handleToggleModal, handlePdfLoad }) {\r\n  return (\r\n    <div className={wrapper}>\r\n      <label htmlFor=\"xas78g92\" className={label}>\r\n        <MdPictureAsPdf />\r\n        <input\r\n          id=\"xas78g92\"\r\n          className={input}\r\n          type=\"file\"\r\n          onChange={e => {\r\n            handlePdfLoad(e);\r\n            handleToggleModal();\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n",["35","36"],"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\PdfLoader\\index.js",[],"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\PdfLoader\\hooks\\useLoadPdf.js",["37","38"],"import { useState, useRef, useEffect } from \"react\";\r\nimport * as PDFJS from \"pdfjs-dist\";\r\n\r\nexport function useLoadPdf(canvasRef) {\r\n  const [pdfPages, setPdfPages] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(null);\r\n  const [numOfPages, setNumOfPages] = useState(null);\r\n  const [viewport, setViewport] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const renderContextRef = useRef(null);\r\n\r\n  // PDF reader\r\n  // @@ TRIGGERED ON INPUT CHANGE\r\n\r\n  function handlePdfLoad(e) {\r\n    setIsLoading(true);\r\n    setCurrentPage(null);\r\n\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener(\"load\", async e => {\r\n      try {\r\n        const typedarray = new Uint8Array(e.currentTarget.result);\r\n        PDFJS.GlobalWorkerOptions.workerSrc =\r\n          \"//cdn.jsdelivr.net/npm/pdfjs-dist@2.6.347/build/pdf.worker.js\";\r\n        const pdfReader = PDFJS.getDocument(typedarray);\r\n        const pdf = await pdfReader.promise;\r\n        const pages = [];\r\n        for (let i = 1; i <= pdf.numPages; i++) {\r\n          const page = await pdf.getPage(i);\r\n          pages.push(page);\r\n        }\r\n        const scale = 0.8;\r\n        const viewport = pages[0].getViewport({ scale });\r\n        //SET TO REACT STATE\r\n        setPdfPages(pages);\r\n        setViewport(viewport);\r\n        setNumOfPages(pdf.numPages);\r\n        setHasLoaded(true);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    });\r\n\r\n    //READING BLOB\r\n    reader.readAsArrayBuffer(file);\r\n  }\r\n\r\n  // INIT CANVAS context\r\n\r\n  useEffect(() => {\r\n    if (viewport) {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      canvasRef.current.height = viewport.height || 500;\r\n      canvasRef.current.width = viewport.width || 500;\r\n      renderContextRef.current = {\r\n        canvasContext: ctx,\r\n        viewport: viewport\r\n      };\r\n      setCurrentPage(1);\r\n    }\r\n  }, [viewport]);\r\n\r\n  //EFFECT THAT WAITS FOR PDF TO BE READ BEFORE DISPLAYING IT TO CANVAS\r\n\r\n  useEffect(() => {\r\n    if (renderContextRef.current) renderPdf();\r\n\r\n    async function renderPdf() {\r\n      await pdfPages[currentPage - 1].render(renderContextRef.current);\r\n      setIsLoading(false);\r\n    }\r\n  }, [currentPage]);\r\n\r\n  function handleIncrementPage() {\r\n    if (pdfPages) setIsLoading(true);\r\n    setCurrentPage(curr => (curr % numOfPages) + 1);\r\n  }\r\n\r\n  function handleDecrementPage() {\r\n    if (currentPage <= 1) return;\r\n    if (pdfPages) setIsLoading(true);\r\n    setCurrentPage(curr => curr - 1);\r\n  }\r\n  return {\r\n    handlePdfLoad,\r\n    handleIncrementPage,\r\n    handleDecrementPage,\r\n    currentPage,\r\n    isLoading,\r\n    hasLoaded,\r\n    numOfPages\r\n  };\r\n}\r\n","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\pdf-reader\\src\\PdfLoader\\hooks\\useHandleModal.js",["39"],"import React, { useState } from \"react\";\r\n\r\nexport function useHandleModal() {\r\n  const [toggleModal, setToggleModal] = useState(false);\r\n\r\n  function handleToggleModal() {\r\n    setToggleModal(bool => !bool);\r\n  }\r\n\r\n  return {\r\n    toggleModal,\r\n    handleToggleModal\r\n  };\r\n}\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":23},{"ruleId":"44","severity":1,"message":"48","line":3,"column":19,"nodeType":"46","messageId":"47","endLine":3,"endColumn":24},{"ruleId":"40","replacedBy":"49"},{"ruleId":"42","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":64,"column":6,"nodeType":"53","endLine":64,"endColumn":16,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":75,"column":6,"nodeType":"53","endLine":75,"endColumn":19,"suggestions":"56"},{"ruleId":"44","severity":1,"message":"57","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":13},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'close' is defined but never used.",["58"],["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'canvasRef'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'pdfPages'. Either include it or remove the dependency array.",["61"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [canvasRef, viewport]",{"range":"66","text":"67"},"Update the dependencies array to be: [currentPage, pdfPages]",{"range":"68","text":"69"},[1994,2004],"[canvasRef, viewport]",[2303,2316],"[currentPage, pdfPages]"]